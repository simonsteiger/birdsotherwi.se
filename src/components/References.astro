---
import type { CitationMap, Citation } from '../types/citations';

interface Props {
  citations: CitationMap;
}

const { citations } = Astro.props;

const sortedCitations = Object.values(citations).sort((a: Citation, b: Citation) => {
  const authorA = a.authors[0]?.split(' ').pop() || '';
  const authorB = b.authors[0]?.split(' ').pop() || '';
  if (authorA !== authorB) return authorA.localeCompare(authorB);
  return a.year - b.year;
});
---

<div class="references" id="references">
  <h2>References</h2>
  <ol class="reference-list">
    {sortedCitations.map((citation: Citation) => (
      <li class="reference-item" id={`ref-${citation.authors[0]?.split(' ').pop()}-${citation.year}`}>
        {citation.authors.join('; ')} ({citation.year}). 
        {citation.title}.
        <em>{citation.journal}</em>.
        {citation.doi && (
          <a href={`https://doi.org/${citation.doi}`} class="doi-link">
            https://doi.org/${citation.doi}
          </a>
        )}
      </li>
    ))}
  </ol>
</div>

<style>
  .references {
    border-top: 2px solid #FAFAFA;
    padding-top: 1rem;
    margin-top: 4rem;
  }
  
  :global(.dark) .references {
    border-top: 2px solid #35373B;
  }
  
  .reference-list {
    list-style-position: outside;
    padding-left: 2.5rem;
    counter-reset: citation-counter;
  }
  
  .reference-item {
    margin-bottom: 1rem;
    position: relative;
    display: block;
  }
  
  .reference-item::before {
    position: absolute;
    left: -2.5rem;
    content: counter(citation-counter) ".";
    counter-increment: citation-counter;
    color: currentColor;
  }
  
  .doi-link {
    display: block;
    margin-top: 0.25rem;
    color: #666;
    font-size: 0.9em;
  }

  :global(.dark) .doi-link {
    color: #999;
  }
</style>
